---
source: test/tests/parser_output.rs
assertion_line: 33
expression: "parse_expr(\"1 + 2 * -3 < 0\").map(|b| b.ast.item)"

---
Ok(Expr(
  kind: CompareOp(Span(
    start: 0,
    end: 10,
    item: Expr(
      kind: ArithOp(Span(
        start: 0,
        end: 1,
        item: Expr(
          kind: Number("1"),
          ty: Int64,
        ),
      ), Add, Span(
        start: 4,
        end: 10,
        item: Expr(
          kind: ArithOp(Span(
            start: 4,
            end: 5,
            item: Expr(
              kind: Number("2"),
              ty: Int64,
            ),
          ), Mul, Span(
            start: 8,
            end: 10,
            item: Expr(
              kind: Negate(Span(
                start: 9,
                end: 10,
                item: Expr(
                  kind: Number("3"),
                  ty: Int64,
                ),
              )),
              ty: Int64,
            ),
          )),
          ty: Int64,
        ),
      )),
      ty: Int64,
    ),
  ), Lt, Span(
    start: 13,
    end: 14,
    item: Expr(
      kind: Number("0"),
      ty: Int64,
    ),
  )),
  ty: Bool,
))
